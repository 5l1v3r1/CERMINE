package pl.edu.icm.yadda.analysis.jrlsimilarity.metadata.disambiguation;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import pl.edu.icm.yadda.analysis.jrlsimilarity.common.JournalId;
import pl.edu.icm.yadda.analysis.jrlsimilarity.metadata.JournalMetaDataParser;
import pl.edu.icm.yadda.analysis.jrlsimilarity.utils.JournalTitleTools;
import pl.edu.icm.yadda.bwmeta.model.YAncestor;
import pl.edu.icm.yadda.bwmeta.model.YConstants;
import pl.edu.icm.yadda.bwmeta.model.YElement;
import pl.edu.icm.yadda.bwmeta.model.YExportable;
import pl.edu.icm.yadda.bwmeta.model.YStructure;
import pl.edu.icm.yadda.bwmeta.transformers.Bwmeta2_0ToYTransformer;
import pl.edu.icm.yadda.metadata.transformers.TransformationException;
import pl.edu.icm.yadda.service2.CatalogObject;
import pl.edu.icm.yadda.service2.CatalogObjectPart;
import pl.edu.icm.yadda.service2.CatalogParamConstants;
import pl.edu.icm.yadda.service2.YaddaObjectID;
import pl.edu.icm.yadda.service2.catalog.CatalogException;
import pl.edu.icm.yadda.service2.catalog.ICatalogFacade;

/**
 * Class responsible for extracting disambiguation meta-data from source
 * element.
 * @author Michał Siemiończyk michsiem@icm.edu.pl
 *
 */
public class JournalDisambiguationParser implements JournalMetaDataParser<ArrayList<YElement>> {

	protected final Logger log = LoggerFactory.getLogger(this.getClass());

	/** Allows for parser to communicate with yadda-repo in order to obtain detailed
	 * information about ancestor objects*/
	private ICatalogFacade<String> catalogFacade;
	

	/** Element that should contain JournalElement */
	private ArrayList<YElement> sourceElem;
	
	/** Output metadata */
	private JournalDisambiguationMeta outputMeta = null;
	
	/** Constructor that sets source.
	 * @param yElem */
	public JournalDisambiguationParser(ArrayList<YElement> yElem){
		this.sourceElem = yElem;
	}
	

	/** Provides parsing mechanism. That method makes an assumption that YElement
	 * is on a journal level in journal hierarchy*/
	@Override
	public boolean parse() {
		JournalId tempJourId = null;
		String tempTitle = null , tempAcronymTitle = null, tempIssn = null, tempEIssn = null;
		
		if(this.catalogFacade == null){
			log.error("Catalog Facade has not been set properly!");
			return false;
		}
			
		YElement yElem = null; //TODO improve for BWMETA 2 also? later?
		
		for(YElement yElemIt : this.sourceElem){ //choose part which contains JournalStructure;
			if(yElemIt.getStructure(YConstants.EXT_HIERARCHY_JOURNAL) != null){
				yElem = yElemIt;
				break;
			}
		}

		if(yElem == null) {
//				log.warn("DEBUG : IT HAAPENS that yElem = null!");
//			this.outputMeta = new JournalDisambiguationMeta("1 " + yElem +" | "+yElem.getId() + " |  " + yElem.getStructure(YConstants.EXT_HIERARCHY_JOURNAL) + " |  " + yElem.getStructures()  );//creates an emtpy Object
			this.outputMeta = new JournalDisambiguationMeta("1");
//			this.outputMeta = new JournalDisambiguationMeta("1 " + "\nSourceElem: " + this.sourceElem + 
//					"\nsize:" + this.sourceElem.size() + 
//					"\nStructures:" + this.sourceElem.get(0).getStructures() + 
//					"\n Element.get(0) " + this.sourceElem.get(0) +
//					"\nID:" + this.sourceElem.get(0).getId());
			return true; //no Journal-hierarchy, return empty Object
		}
		
		YStructure yStruc =  yElem.getStructure(YConstants.EXT_HIERARCHY_JOURNAL);
		if(yStruc == null || yStruc.getCurrent() == null || yStruc.getCurrent().getLevel() == null){
			log.warn("DEBUG : IT HAAPENS that yStructure = null!");
			this.outputMeta = new JournalDisambiguationMeta("2");//creates an emtpy Object
			return true; //no Journal-hierarchy, return empty Object
		}
		YElement journalAncestor = null;	
		/* Main extraction*/
		if(yStruc.getCurrent().getLevel().equals(YConstants.EXT_LEVEL_JOURNAL_ARTICLE)){
			
			journalAncestor = getElementAncestorFromRepo(yElem, YConstants.EXT_HIERARCHY_JOURNAL, 
																	YConstants.EXT_LEVEL_JOURNAL_JOURNAL);
			if(journalAncestor == null){
				log.error("NO ANCESTOR for " + yElem.getId());
				this.outputMeta = new JournalDisambiguationMeta("3");
				return true; //all was OK
			}
			// ISSN
			
//			if(yElem.getId().equals("bwmeta1.element.53c8fa72-ca8d-36a1-8312-4045bb95b7d7")){
//				log.warn("DEBUG-FINAL000 \n" + yElem.getIds() + "\n"+journalAncestor + "\n" + journalAncestor.getIds());
//			}
			tempIssn = getIssnFromJournalElement(journalAncestor);
				
			//EISSN
			tempEIssn = getEIssnFromJournalElement(journalAncestor);
			
			//TITLE
			tempTitle = getTitleFromJournalElement(journalAncestor);
			
			if(tempTitle != null){
				if(tempTitle.equals("")) tempTitle = null;
				else tempAcronymTitle = JournalTitleTools.getAcronymedTitle(tempTitle);
			}
		/* We consider also YElements containing struc=Journals ...*/
		}else if(yStruc.getCurrent().getLevel().equals(YConstants.EXT_LEVEL_JOURNAL_JOURNAL)){
			   /* In this case our YElement is an journal, so we operate directly on it */
				// ISSN
				tempIssn = getIssnFromJournalElement(yElem);
					
				//EISSN
				tempEIssn = getEIssnFromJournalElement(yElem);
				
				//TITLE
				tempTitle = getTitleFromJournalElement(yElem);
				
				if(tempTitle != null){
					if(tempTitle.equals("")) tempTitle = null;
					else tempAcronymTitle = JournalTitleTools.getAcronymedTitle(tempTitle);
				}
		}
//		}else{
//			log.warn("NO STRUCTURE ELEMENT!" + yElem.getStructures() + " id: " + yElem.getId() + "/n CurrLevel" +
//					yStruc.getCurrent().getLevel());
//		}
		
	//			log.info("No yElement on journal level (in journal hierarchy) found in input channel!");
			
		if(tempTitle != null || tempIssn != null || tempEIssn != null || tempAcronymTitle != null){	
			this.outputMeta = new JournalDisambiguationMeta(tempJourId, tempTitle, tempAcronymTitle, tempIssn, tempEIssn);
			if(tempIssn == null)
				if(journalAncestor != null){
//					log.warn("DEBUG-FINALN ANC\n id:" + journalAncestor.getId() + "\n" + journalAncestor.getIds());
				}else{
//					log.warn("DEBUG-FINAL ART\n id:" + yElem.getId() + "\n" + yElem.getIds());
				}
		}
		else
			this.outputMeta = new JournalDisambiguationMeta("4");
//			this.outputMeta = new JournalDisambiguationMeta("4 " + yElem.getId() + " |x2x \n " + yElem.getStructures());//creates an empty Object
		
		return true;
	}

	public void setCatalogFacade(ICatalogFacade<String> catalogFacade) {
		this.catalogFacade = catalogFacade;
	}
	
	public ICatalogFacade<String> getCatalogFacade(){
		return this.catalogFacade;
	}
	
	public JournalDisambiguationMeta getParsedData(){
		return this.outputMeta;
	}


	@Override
	public void setSource(ArrayList<YElement> sourceElement) {
		this.sourceElem = sourceElement;
		
	}
	
	/** Method for getting ancestor YElement of current YElement from Catalog.
	 * An access to catalog with object parts if provided through catalogFacade
	 * Object.
	 * In this case it is used for obtaining YElement in which Journal is current.
	 * Journal obtained is supposed to be an valid ancestor of YElement provided
	 * as argument currElement
	 * @return null if no Ancestor was found; YElement representing ancestor otherwise
	 * */
	private YElement getElementAncestorFromRepo(YElement currElement, String hierarchy, String ancestorLevel){
		YAncestor yAnc = currElement.getStructure(hierarchy).getAncestor(ancestorLevel);
		if(yAnc == null) return null;	//TODO think about loging it somehow - there's no ancestor at all!
//		YToBwmeta2_0Transformer trans = new YToBwmeta2_0Transformer();
		
		String ancestorId = yAnc.getIdentity();
		YElement ancestorElement = null;
		try {
			CatalogObject<String> catObject = this.catalogFacade.getObject(new YaddaObjectID(ancestorId));
			if(catObject == null)
				return null;
			Bwmeta2_0ToYTransformer transformer = new Bwmeta2_0ToYTransformer();
			List<YExportable> yExportList = null;
			boolean goFor2nd = false; //DEBUG
			for(CatalogObjectPart<String> part : catObject.getParts()){
				if (!part.getType().equals(CatalogParamConstants.TYPE_BWMETA2)) continue;
//				String temp = part.getData();
				if(part.getData() == null){
					if(!goFor2nd){
						log.error("Part ==  NULL, so no ancestor for that one!");
						goFor2nd = true;
						continue;
					}else{
						log.error("Part ==  NULL, so no ancestor for that in 2nd!!!");
						return null;
					}
				}
				yExportList = transformer.read(part.getData(), (Object[])null);
				if(yExportList.size() > 1){
					log.error("Size of ExportList > 0!!!!" + yExportList.size());
				}
				//TODO remove, it's for debug!
//				if(ancestorId.equals("bwmeta1.element.75bfb854-ec87-3baa-8157-89c9bf1c8b30")){
//					YElement temp = (YElement)yExportList.get(0);
//					if(temp.getId(YConstants.EXT_SCHEME_ISSN) == null)
//						log.warn("DEBUGgetANC + IDS:" + temp.getIds() + "\nYElement" +
//								temp + "\nStrctures" +
//								temp.getStructures() + "\nId" + 
//								temp.getId());
//							
//				}
				ancestorElement = (YElement)yExportList.get(0);
				break;//just BWMETA1 (part1) for now //TODO inlcude BWMETA2?
				
//				for(YExportable yElemExport : yExportList)
//					if(yElemExport instanceof YElement)
//						ancestorElement = (YElement)yElemExport;
////						yElemList.add((YElement)yElemExport);
			}
		} catch (CatalogException e) {
			log.error("CatalogException in getElementAncestorFromRepo()" + e);
		} catch (TransformationException e) {
			log.error("TransformationException in getElementAncestorForRepo()" + e);
		}
		return ancestorElement;
		
	}
	
	/**
	 * Interrnal method for EISSN extraction;
	 * @param journal Input journal;
	 * @return String with issn data 
	 */
	private String getEIssnFromJournalElement(YElement journal){
		String returnIssn = null;
		returnIssn = journal.getId(YConstants.EXT_SCHEME_EISSN);
		return returnIssn;
	}
	
	/**
	 * Interrnal method for ISSN extraction;
	 * @param journal Input journal;
	 * @return String with issn data 
	 */
	private String getIssnFromJournalElement(YElement journal){
		String returnIssn = null;
		returnIssn = journal.getId(YConstants.EXT_SCHEME_ISSN);
		return returnIssn;
	}

	/**
	 * Internal method for title extraction;
	 * @param journalAncestor
	 * @return title (if one title was present) or String with more titles in format
	 * "1) Title1 2) Title2 3)Title3
	 */
	private String getTitleFromJournalElement(YElement journalAncestor) {
		String tempTitle = null;
		if(journalAncestor.getNames().size() == 0)
			log.warn("Journal yElement does not contain name (title)!");
		else if(journalAncestor.getNames().size() > 1){
			if(journalAncestor.getNames().get(0) == null || journalAncestor.getNames().get(0).equals(""))
				log.error("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n");
			StringBuilder temp = new StringBuilder();
			for(int i = 0; i < journalAncestor.getNames().size(); i++)
				temp.append(i + ")"+ journalAncestor.getNames().get(i).getText() +" >> ");
			tempTitle = temp.toString();
		}
		else
			tempTitle = journalAncestor.getNames().get(0).getText();
		return tempTitle;
	}

}

