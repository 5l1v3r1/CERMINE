<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:proc="http://yadda.icm.edu.pl/schema/processing"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
            http://www.springframework.org/schema/integration/stream
            http://www.springframework.org/schema/integration/stream/spring-integration-stream-1.0.xsd
            http://yadda.icm.edu.pl/schema/processing
            http://yadda.icm.edu.pl/schema/processing/yadda-process.xsd">

    <!--
        Metadata extraction process. it extracts metadata from PDFs in a few steps.
        
        Required process parameters:
        source_dir - directory holding PDF files for processing
    -->

    <context:annotation-config/>

    <import resource="classpath:pl/edu/icm/yadda/analysis/metadata/common/services.xml"/>

    <!-- 1. iterate through pdf files in source directory -->
    <proc:source id="someSource" channel="channel1"
        iterator-builder="filesFromFolderIteratorBuilder">
    </proc:source>

    <proc:chain id="mainFlow" input-channel="channel1" output-channel="channel2">

        <!-- 2. glyph extraction -->
        <proc:processor>
            <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.GlyphExtractorNode">
                <property name="glyphExtractor" ref="glyphExtractor" />
            </bean>
        </proc:processor>

        <!-- 3. page segmentation -->
        <proc:processor>
            <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.PageSegmenterNode">
                <property name="pageSegmenter" ref="pageSegmenter" />
            </bean>
        </proc:processor>

        <!-- 4. zone classification -->
        <proc:processor>
            <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.ZoneClassifierNode">
                <property name="zoneClassifier" ref="zoneClassifier" />
            </bean>
        </proc:processor>

        <!-- 5. metadata extraction (includes bibliographic references extraction) -->
        <proc:processor>
            <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.MetadataExtractorNode">
                <property name="metadataExtractor" ref="metadataExtractor" />
                <property name="bibReferenceExtractor" ref="referenceExtractor" />
            </bean>
        </proc:processor>

        <!-- 6. bibliographic references parsing -->
        <proc:processor>
            <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.BibliographicReferencesParserNode">
                <property name="bibReferenceParser" ref="referenceParser" />
            </bean>
        </proc:processor>

    </proc:chain>

    <!-- 7. YElements to Bwmeta writer -->
    <proc:writer packageSize="20" channel="channel2">
        <bean class="pl.edu.icm.yadda.analysis.metadata.process.nodes.ExtractedMetadataWriterNode">
            <property name="writer" ref="yElementWriter" />
        </bean>
    </proc:writer>

    <!-- beans -->
    <bean id="filesFromFolderIteratorBuilder"
		class="pl.edu.icm.yadda.analysis.metadata.process.source.FilesFromFolderIteratorBuilder">
        <property name="extensions" value="pdf" />
    </bean>

    <bean id="glyphExtractor" class="pl.edu.icm.yadda.analysis.textr.PdfGlyphExtractor" />

    <bean id="yElementWriter" class="pl.edu.icm.yadda.bwmeta.transformers.YToBwmeta2_1Transformer" />

    <!-- channels -->
    <si:channel id="channel1">
        <si:queue capacity="200" />
    </si:channel>

    <si:channel id="channel2">
        <si:queue capacity="200" />
    </si:channel>

</beans>